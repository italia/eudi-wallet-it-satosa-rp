module: pyeudiw.satosa.backend.OpenID4VPBackend
name: OpenID4VP

config:
  
  ui:
    static_storage_url: "https://localhost"
    template_folder: "templates" # project root
    qrcode_template: "qr_code.html"
    error_template: "error.html"
    error_url: "https://localhost/error_page.html"
  
  endpoints:
    pre_request: '/pre-request'
    request:
      module: pyeudiw.satosa.default.request_handler
      class: RequestHandler
      path: '/request-uri'
    response:
      module: pyeudiw.satosa.default.response_handler
      class: ResponseHandler
      path: '/response-uri'
    entity_configuration: '/.well-known/openid-federation'
    status: '/status'
    get_response: '/get-response'

  qrcode:
    size: 250 # px
    color: '#000000'  # hex
    expiration_time: 120 # seconds
    logo_path: 'wallet-it/wallet-icon-blue.svg' # relative to static_storage_url

  response_code:
    sym_key: "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef" # hex string of 64 characters

  jwt:
    default_sig_alg: ES256 # or RS256
    default_enc_alg: RSA-OAEP
    default_enc_enc: A256CBC-HS512
    default_exp: 6         # minutes
    enc_alg_supported: &enc_alg_supported
        - RSA-OAEP
        - RSA-OAEP-256
        - ECDH-ES
        - ECDH-ES+A128KW
        - ECDH-ES+A192KW
        - ECDH-ES+A256KW
    enc_enc_supported: &enc_enc_supported
        - A128CBC-HS256
        - A192CBC-HS384
        - A256CBC-HS512
        - A128GCM
        - A192GCM
        - A256GCM
    sig_alg_supported: &sig_alg_supported
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
    
  authorization:
    url_scheme: haip
    scopes:
    - pid-sd-jwt:unique_id+given_name+family_name
    default_acr_value: https://www.spid.gov.it/SpidL2
    expiration_time: 5 # minutes
    aud: https://self-issued.me/v2
    response_mode: direct_post
    presentation_definition:
      id: global-presentation-definition-id
      input_descriptors:
      - id: input-specific-id
        purpose: Request presentation holding Power of Representation attestation
        format:
          vc+sd-jwt: {}
        constraints:
          fields:
          - path:
            - "$.vct"
            filter:
              const: urn:eu.europa.ec.eudi:por:1
      - id: another-input-specific-id
        purpose: Request first name and last name claims from PID attestation
        format:
          vc+sd-jwt: {}
        constraints:
          limit_disclosure: required
          fields:
            - path:
              - "$.vct"
              filter:
              type: string
              pattern: urn:eu.europa.ec.eudi:por:1
            - path:
              - "$.family_name"
            - path:
              - "$.given_name"

  user_attributes:
    unique_identifiers:
    - tax_id_code
    - unique_id
    subject_id_random_value: CHANGEME!
  
  network:
    httpc_params:
      connection:
        ssl: true
      session:
        timeout: 6

  trust:
    direct_trust_sd_jwt_vc:
      module: pyeudiw.trust.default.direct_trust_sd_jwt_vc
      class: DirectTrustSdJwtVc
      config:
        jwk_endpoint: /.well-known/jwt-vc-issuer
    federation:
      module: pyeudiw.trust.default.federation
      class: FederationTrustModel
      config:
        metadata_type: "wallet_relying_party"
        authority_hints:
            - http://127.0.0.1:8000
        trust_anchors:
            - public_keys: []
            - http://127.0.0.1:8000
        default_sig_alg: "RS256"
        trust_marks: [] 
        federation_entity_metadata:
            organization_name: Developers Italia SATOSA OpenID4VP backend
            homepage_uri: https://developers.italia.it
            policy_uri: https://developers.italia.it
            tos_uri: https://developers.italia.it
            logo_uri: https://developers.italia.it/assets/icons/logo-it.svg
        federation_jwks: ${PYEUDIW_FEDERATION_JWKS}
    x509:
      module: pyeudiw.trust.default.x509
      class: X509TrustModel
      config:
        trust_anchor_certificates:
            - "todo"
        trust_anchors_cn: # we might mix CN and SAN together
            - http://127.0.0.1:8000

  # private jwk
  metadata_jwks: ${PYEUDIW_METADATA_JWKS}


  # Mongodb database configuration
  storage:
    mongo_db:
      cache:
        module: pyeudiw.storage.mongo_cache
        class: MongoCache
        init_params:
          url: mongodb://localhost:27017
          conf:
            db_name: eudiw
          # connection_params:
      storage:
        module: pyeudiw.storage.mongo_storage
        class: MongoStorage
        init_params:
          url: mongodb://localhost:27017
          conf:
            db_name: eudiw
            db_sessions_collection: sessions
            db_trust_attestations_collection: trust_attestations
            db_trust_anchors_collection: trust_anchors
            db_trust_sources_collection: trust_sources
            data_ttl: 63072000 # 2 years
          # - connection_params:

  #This is the configuration for the relaying party metadata
  metadata:
    application_type: web

    #The following section contains all the algorithms supported for the encryption of response
    authorization_encrypted_response_alg: *enc_alg_supported
    authorization_encrypted_response_enc: *enc_enc_supported
    authorization_signed_response_alg: *sig_alg_supported

    #Various informations of the client
    client_id: # this field is autopopulated using internal variables base_url and name using the following format: "<base_url>/<name>" 
    client_name: Name of an example organization
    contacts:
      - ops@verifier.example.org
    default_acr_values:
      - https://www.spid.gov.it/SpidL2
      - https://www.spid.gov.it/SpidL3

    default_max_age: 1111

    #The following section contains all the algorithms supported for the encryption of id token response
    id_token_encrypted_response_alg: *enc_alg_supported
    id_token_encrypted_response_enc: *enc_enc_supported
    id_token_signed_response_alg: *sig_alg_supported

    # loaded in the __init__
    # jwks:


    redirect_uris: 
      # This field is autopopulated using internal variables base_url and name using the following format: <base_url>/<name>/redirect-uri"
    request_uris: 
      # This field is autopopulated using internal variables base_url and name using the following format: <base_url>/<name>/request-uri"

    require_auth_time: true
    subject_type: pairwise

    vp_formats:
      vc+sd-jwt:
        sd-jwt_alg_values:
          - ES256
          - ES384
        kb-jwt_alg_values:
          - ES256
          - ES384
